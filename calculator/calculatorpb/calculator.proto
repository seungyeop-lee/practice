syntax = "proto3";

package calculator;
option go_package = "calculatorpb";

message SumRequest {
    int64 first = 1;
    int64 second = 2;
}

message SumResponse {
    int64 result = 1;
}

message DecomposeRequest {
    int64 number = 1;
}

message DecomposeResponse {
    int64 prime_factor = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    double average = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 maximum = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalService {
    rpc Sum (SumRequest) returns (SumResponse) {};
    rpc Decompose (DecomposeRequest) returns (stream DecomposeResponse) {};
    rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {};
    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // error handling
    // this RPC will throw an exception if the sent number is negative
    // The error being set is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}