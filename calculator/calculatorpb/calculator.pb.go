// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	First                int64    `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Second               int64    `protobuf:"varint,2,opt,name=second,proto3" json:"second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirst() int64 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *SumRequest) GetSecond() int64 {
	if m != nil {
		return m.Second
	}
	return 0
}

type SumResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type DecomposeRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecomposeRequest) Reset()         { *m = DecomposeRequest{} }
func (m *DecomposeRequest) String() string { return proto.CompactTextString(m) }
func (*DecomposeRequest) ProtoMessage()    {}
func (*DecomposeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *DecomposeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecomposeRequest.Unmarshal(m, b)
}
func (m *DecomposeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecomposeRequest.Marshal(b, m, deterministic)
}
func (m *DecomposeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecomposeRequest.Merge(m, src)
}
func (m *DecomposeRequest) XXX_Size() int {
	return xxx_messageInfo_DecomposeRequest.Size(m)
}
func (m *DecomposeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecomposeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecomposeRequest proto.InternalMessageInfo

func (m *DecomposeRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type DecomposeResponse struct {
	PrimeFactor          int64    `protobuf:"varint,1,opt,name=prime_factor,json=primeFactor,proto3" json:"prime_factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecomposeResponse) Reset()         { *m = DecomposeResponse{} }
func (m *DecomposeResponse) String() string { return proto.CompactTextString(m) }
func (*DecomposeResponse) ProtoMessage()    {}
func (*DecomposeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *DecomposeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecomposeResponse.Unmarshal(m, b)
}
func (m *DecomposeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecomposeResponse.Marshal(b, m, deterministic)
}
func (m *DecomposeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecomposeResponse.Merge(m, src)
}
func (m *DecomposeResponse) XXX_Size() int {
	return xxx_messageInfo_DecomposeResponse.Size(m)
}
func (m *DecomposeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecomposeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecomposeResponse proto.InternalMessageInfo

func (m *DecomposeResponse) GetPrimeFactor() int64 {
	if m != nil {
		return m.PrimeFactor
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*DecomposeRequest)(nil), "calculator.DecomposeRequest")
	proto.RegisterType((*DecomposeResponse)(nil), "calculator.DecomposeResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xad, 0x8b, 0x05, 0x67, 0x17, 0xd1, 0x20, 0x75, 0x59, 0x14, 0x34, 0x20, 0x2c, 0x1e,
	0x56, 0x51, 0x10, 0xf1, 0xa8, 0xe2, 0xc9, 0xd3, 0xf6, 0xe6, 0x45, 0xda, 0x38, 0x85, 0x42, 0xd2,
	0x89, 0xf9, 0xe3, 0x27, 0xf1, 0x03, 0x8b, 0x69, 0x63, 0x83, 0xb2, 0xb7, 0xbe, 0x5f, 0xdf, 0x9b,
	0xc9, 0x63, 0x60, 0x29, 0x2a, 0x29, 0xbc, 0xac, 0x1c, 0x99, 0xcb, 0xf1, 0x53, 0xd7, 0x89, 0x58,
	0x69, 0x43, 0x8e, 0x18, 0x8c, 0x84, 0xdf, 0x03, 0x94, 0x5e, 0xad, 0xf1, 0xc3, 0xa3, 0x75, 0xec,
	0x10, 0x76, 0x9a, 0xd6, 0x58, 0x37, 0xcf, 0x4e, 0xb3, 0xe5, 0x64, 0xdd, 0x0b, 0x56, 0x40, 0x6e,
	0x51, 0x50, 0xf7, 0x3e, 0xdf, 0x0e, 0x78, 0x50, 0xfc, 0x1c, 0xa6, 0x21, 0x6b, 0x35, 0x75, 0x16,
	0x7f, 0x6c, 0x06, 0xad, 0x97, 0x31, 0x3d, 0x28, 0x7e, 0x01, 0xfb, 0x4f, 0x28, 0x48, 0x69, 0xb2,
	0x18, 0x17, 0x15, 0x90, 0x77, 0x5e, 0xd5, 0x68, 0xa2, 0xb7, 0x57, 0xfc, 0x16, 0x0e, 0x12, 0xef,
	0x30, 0xf8, 0x0c, 0x66, 0xda, 0xb4, 0x0a, 0xdf, 0x9a, 0x4a, 0x38, 0x8a, 0x91, 0x69, 0x60, 0xcf,
	0x01, 0x5d, 0x7f, 0x65, 0x00, 0x8f, 0x95, 0x2c, 0xd1, 0x7c, 0xb6, 0x02, 0xd9, 0x1d, 0x4c, 0x4a,
	0xaf, 0x58, 0xb1, 0x4a, 0xba, 0x8f, 0x35, 0x17, 0x47, 0xff, 0x78, 0xbf, 0x89, 0x6f, 0xb1, 0x17,
	0xd8, 0xfd, 0x7d, 0x00, 0x3b, 0x4e, 0x7d, 0x7f, 0x3b, 0x2c, 0x4e, 0x36, 0xfc, 0x8d, 0xb3, 0xae,
	0xb2, 0x87, 0xbd, 0xd7, 0x59, 0x7a, 0x8a, 0x3a, 0x0f, 0x07, 0xb8, 0xf9, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x0a, 0xbb, 0x5c, 0xd9, 0xac, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalServiceClient is the client API for CalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Decompose(ctx context.Context, in *DecomposeRequest, opts ...grpc.CallOption) (CalService_DecomposeClient, error)
}

type calServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalServiceClient(cc grpc.ClientConnInterface) CalServiceClient {
	return &calServiceClient{cc}
}

func (c *calServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calServiceClient) Decompose(ctx context.Context, in *DecomposeRequest, opts ...grpc.CallOption) (CalService_DecomposeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalService_serviceDesc.Streams[0], "/calculator.CalService/Decompose", opts...)
	if err != nil {
		return nil, err
	}
	x := &calServiceDecomposeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalService_DecomposeClient interface {
	Recv() (*DecomposeResponse, error)
	grpc.ClientStream
}

type calServiceDecomposeClient struct {
	grpc.ClientStream
}

func (x *calServiceDecomposeClient) Recv() (*DecomposeResponse, error) {
	m := new(DecomposeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalServiceServer is the server API for CalService service.
type CalServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Decompose(*DecomposeRequest, CalService_DecomposeServer) error
}

// UnimplementedCalServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalServiceServer struct {
}

func (*UnimplementedCalServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalServiceServer) Decompose(req *DecomposeRequest, srv CalService_DecomposeServer) error {
	return status.Errorf(codes.Unimplemented, "method Decompose not implemented")
}

func RegisterCalServiceServer(s *grpc.Server, srv CalServiceServer) {
	s.RegisterService(&_CalService_serviceDesc, srv)
}

func _CalService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalService_Decompose_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DecomposeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalServiceServer).Decompose(m, &calServiceDecomposeServer{stream})
}

type CalService_DecomposeServer interface {
	Send(*DecomposeResponse) error
	grpc.ServerStream
}

type calServiceDecomposeServer struct {
	grpc.ServerStream
}

func (x *calServiceDecomposeServer) Send(m *DecomposeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalService",
	HandlerType: (*CalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Decompose",
			Handler:       _CalService_Decompose_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
