<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 등록된 빈 중에 Advisor객체가 있으면, Advisor객체에 저장된 정보를 기반으로 해당 객체를 프록시 객체로 만들어서 최종적으로 빈에 등록한다. -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
		<!-- 테스트용 DB의 url을 설정 -->
		<property name="url" value="jdbc:mysql://localhost:3306/testdb?useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=Asia/Tokyo" />
		<property name="username" value="spring" />
		<property name="password" value="book" />
	</bean>
	
	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
		<property name="userLevelUpgradePolicy" ref="userLevelUpgradePolicy"></property>
	</bean>
	
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice"	/>
		<property name="pointcut" ref="transactionPointcut" />
	</bean>
	
	<bean id="transactionPointcut" class="springbook.user.service.NameMatchClassMethodPointcut">
		<property name="mappedClassName" value="*ServiceImpl" />
		<property name="mappedName" value="upgrade*" />
	</bean>
	
	<bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="userLevelUpgradePolicy" class="springbook.user.service.CommonUserLevelUpgradePolicy">
		<property name="userDao" ref="userDao"></property>
		<property name="mailSender" ref="mailSender"></property>
	</bean>
	
	<!-- 트랜젝션 테스트(upgradeAllOrNothing())용 UserService -->
	<bean id="testUserService" class="springbook.user.service.UserServiceImpl" parent="userService">
		<property name="userLevelUpgradePolicy" ref="testUserLevelUpgradePolicy" />
	</bean>
	
	<!-- 트랜젝션 테스트(upgradeAllOrNothing())용 UserLevelUpgradePolicy -->
	<bean id="testUserLevelUpgradePolicy" class="springbook.user.service.UserServiceTest$TestUserLevelUpgradePolicy" parent="userLevelUpgradePolicy" />
	
	<bean id="mailSender" class="springbook.user.service.DummyMailSender">
	</bean>
	
	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>
